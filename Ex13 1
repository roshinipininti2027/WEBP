Greeting.jsx:
import React from 'react';
//RoshiniPininti
function GreetingWithoutJSX() {
    return React.createElement('h1', null, 'Hello, React!');
}

function GreetingWithJSX() {
    return <h1>Hello, React!</h1>;
}

function GreetingWithVariable() {
    const message = "Hello, React!";
    return <h1>{message}</h1>;
}

export { GreetingWithoutJSX, GreetingWithJSX, GreetingWithVariable };


Listis.jsx:

import React from 'react';

function Listis() {
    const fruits = ["Apple", "Banana", "Orange"];
    const a = 9;
    const b = 10;
    const sum = (a ** 2) + (b ** 2);
    const isMorning = true;
    const greeting = isMorning ? "Good Morning" : "Good Evening";
    const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    const currentDay = days[new Date().getDay()];

    return (
        <>
            <ul>
                {fruits.map((fruit) => (
                    <li key={fruit}>{fruit}</li>
                ))}
            </ul>
            <p style={{ color: 'green', fontFamily: 'Arial, sans-serif', fontWeight: 'bold', fontSize: '24px' }}>
                This is a styled message using inline CSS.
            </p>
            <p>Sum of squares of {a} and {b} is {sum}</p>
            <p>{greeting}</p>
            <p>Today is: <strong>{currentDay}</strong></p>
        </>
    );
}

export default Listis;



TemperatureConverter.jsx
import React, { useState } from 'react';

function TemperatureConverter() {
    const [celsius, setCelsius] = useState('');
    const [fahrenheit, setFahrenheit] = useState('');

    const toFahrenheit = (c) => (c * 9 / 5 + 32).toFixed(2);
    const toCelsius = (f) => ((f - 32) * 5 / 9).toFixed(2);

    return (
        <div>
            <h3>Temperature Converter</h3>
            <input
                type="number"
                placeholder="Celsius"
                value={celsius}
                onChange={(e) => {
                    const value = e.target.value;
                    setCelsius(value);
                    setFahrenheit(value ? toFahrenheit(value) : '');
                }}
            />
            <span> °C = </span>
            <input
                type="number"
                placeholder="Fahrenheit"
                value={fahrenheit}
                onChange={(e) => {
                    const value = e.target.value;
                    setFahrenheit(value);
                    setCelsius(value ? toCelsius(value) : '');
                }}
            />
            <span> °F</span>
        </div>
    );
}

export default TemperatureConverter;



ReverseString.jsx
import React, { useState } from 'react';

function ReverseString() {
    const [input, setInput] = useState('');
    const reverse = input.split('').reverse().join('');
    const isPalindrome = input === reverse;

    return (
        <div>
            <h3>Reverse and Palindrome Check</h3>
            <input
                type="text"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                placeholder="Enter a string"
            />
            <p>Reversed: {reverse}</p>
            <p>{isPalindrome ? "It's a Palindrome!" : "Not a Palindrome"}</p>
        </div>
    );
}

export default ReverseString;

RandomNumber.jsx
import React, { useState } from 'react';

function RandomNumber() {
    const [number, setNumber] = useState(null);

    const generateRandomNumber = () => {
        const randomNum = Math.floor(Math.random() * 100) + 1;
        setNumber(randomNum);
    };

    return (
        <div>
            <h3>Random Number Generator</h3>
            <button onClick={generateRandomNumber}>Generate Random Number</button>
            {number !== null && <p>Random Number: {number}</p>}
        </div>
    );
}

export default RandomNumber;

LeapYearChecker.jsx
import React from 'react';

function LeapYearChecker() {
    const year = 2024;
    const isLeapYear = (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);

    return (
        <div>
            <h3>Leap Year Checker</h3>
            <p>{year} {isLeapYear ? "is a Leap Year" : "is NOT a Leap Year"}</p>
        </div>
    );
}

export default LeapYearChecker;
UserGreeting.jsx
import React, { Component } from 'react';

class UserGreeting extends Component {
    render() {
        const { firstName, lastName } = this.props;
        return (
            <div>
                <h3>User Greeting</h3>
                <p>Hello, {firstName} {lastName}!</p>
            </div>
        );
    }
}

export default UserGreeting;





App.js
import React from 'react';
import { GreetingWithoutJSX, GreetingWithJSX, GreetingWithVariable } from './components/Greeting';
import Listis from './components/Listis';
import TemperatureConverter from './components/TemperatureConverter';
import ReverseString from './components/ReverseString';
import RandomNumber from './components/RandomNumber';
import LeapYearChecker from './components/LeapYearChecker';
import UserGreeting from './components/UserGreeting';

function App() {
    return (
        <div>
            <GreetingWithoutJSX />
            <GreetingWithJSX />
            <GreetingWithVariable />
            <Listis />
            <TemperatureConverter />
            <ReverseString />
            <RandomNumber />
            <LeapYearChecker />
            <UserGreeting firstName="Roshini" lastName="Pininti" />
        </div>
    );
}

export default App;

index.js
import React from 'react';
import { createRoot } from 'react-dom/client'; 
import './index.css';
import App from './App';
const root = createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);



Index.css
body {
  font-family: Arial, sans-serif;
  padding: 20px;
}

